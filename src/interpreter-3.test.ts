import { Assembler, interpret } from "./interpreter-3";

// prettier-ignore
const fizzbuzz = new Assembler()
  .initLocal("i", 1)
  .label('loop')
    .local('i').number(15).mod().jumpIfZero('print_fizzbuzz')
    .local('i').number(3).mod().jumpIfZero('print_fizz')
    .local('i').number(5).mod().jumpIfZero('print_buzz')
    .local('i').print()
  .label('loop_iter')
    .local('i').number(1).add().setLocal('i')
    .local('i').number(101).sub().jumpIfZero('end')
    .jump('loop')
  .label('print_fizzbuzz')
    .string('FizzBuzz').print().jump('loop_iter')
  .label('print_fizz')
    .string('Fizz').print().jump('loop_iter')
  .label('print_buzz')
    .string('Buzz').print().jump('loop_iter')
  .label('end')
    .halt()
  .assemble()

it("runs fizzbuzz", () => {
  expect(interpret(fizzbuzz)).toMatchInlineSnapshot(`
Array [
  "1",
  "2",
  "Fizz",
  "4",
  "Buzz",
  "Fizz",
  "7",
  "8",
  "Fizz",
  "Buzz",
  "11",
  "Fizz",
  "13",
  "14",
  "FizzBuzz",
  "16",
  "17",
  "Fizz",
  "19",
  "Buzz",
  "Fizz",
  "22",
  "23",
  "Fizz",
  "Buzz",
  "26",
  "Fizz",
  "28",
  "29",
  "FizzBuzz",
  "31",
  "32",
  "Fizz",
  "34",
  "Buzz",
  "Fizz",
  "37",
  "38",
  "Fizz",
  "Buzz",
  "41",
  "Fizz",
  "43",
  "44",
  "FizzBuzz",
  "46",
  "47",
  "Fizz",
  "49",
  "Buzz",
  "Fizz",
  "52",
  "53",
  "Fizz",
  "Buzz",
  "56",
  "Fizz",
  "58",
  "59",
  "FizzBuzz",
  "61",
  "62",
  "Fizz",
  "64",
  "Buzz",
  "Fizz",
  "67",
  "68",
  "Fizz",
  "Buzz",
  "71",
  "Fizz",
  "73",
  "74",
  "FizzBuzz",
  "76",
  "77",
  "Fizz",
  "79",
  "Buzz",
  "Fizz",
  "82",
  "83",
  "Fizz",
  "Buzz",
  "86",
  "Fizz",
  "88",
  "89",
  "FizzBuzz",
  "91",
  "92",
  "Fizz",
  "94",
  "Buzz",
  "Fizz",
  "97",
  "98",
  "Fizz",
  "Buzz",
]
`);
});
